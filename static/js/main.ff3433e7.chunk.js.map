{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodoId","setTodoId","setUserId","className","map","id","title","completed","userId","classNames","type","onClick","TodoFilter","selectedFilter","setSelectedFilter","query","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","TodoModal","selectTodo","useState","user","setUser","useEffect","fetchUser","a","selectedUser","todo","filter","toDo","href","email","name","App","setTodos","todoId","loading","setLoading","copiedTodos","setCopiedTodos","fetchList","todosFromServer","filteredTodos","smallInput","toLowerCase","smallDesc","includes","select","searchText","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff3433e7.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId: number,\n  setTodoId: (id: number) => void,\n  setUserId: (id: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  setTodoId,\n  setUserId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(({\n        id,\n        title,\n        completed,\n        userId,\n      }) => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': selectedTodoId === id,\n          })}\n          key={id}\n        >\n          <td className=\"is-vcentered\">{id}</td>\n          <td className=\"is-vcentered\">\n            {completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={completed\n              ? 'has-text-success'\n              : 'has-text-danger'}\n            >\n              {title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                setTodoId(id);\n                setUserId(userId);\n              }}\n            >\n              <span className=\"icon\">\n                <i\n                  className={classNames(\n                    'far',\n                    selectedTodoId !== id\n                      ? 'fa-eye'\n                      : 'fa-eye-slash',\n                  )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  selectedFilter: string,\n  setSelectedFilter: (select: string) => void,\n  query: string,\n  setQuery: (searchText: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectedFilter,\n  setSelectedFilter,\n  query,\n  setQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={selectedFilter}\n          onChange={(event) => {\n            setSelectedFilter(event.target.value);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => {\n          setQuery(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  userId: number,\n  setUserId: (id: number) => void,\n  todos: Todo[],\n  selectedTodoId: number\n  selectTodo: (id: number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userId,\n  setUserId,\n  todos,\n  selectedTodoId,\n  selectTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const selectedUser = await getUser(userId);\n\n      setUser(selectedUser);\n    };\n\n    fetchUser();\n  });\n\n  const todo: Todo = todos.filter((toDo) => toDo.id === selectedTodoId)[0];\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setUserId(0);\n                selectTodo(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n  const [userId, setUserId] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [copiedTodos, setCopiedTodos] = useState<Todo[]>([]);\n  const [selectedFilter, setSelectedFilter] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    const fetchList = async () => {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n      setCopiedTodos(todosFromServer);\n      setLoading(true);\n    };\n\n    fetchList();\n  }, []);\n\n  useEffect(() => {\n    const filteredTodos: Todo[] = copiedTodos.filter((todo: Todo) => {\n      const smallInput = query.toLowerCase();\n      const smallDesc = todo.title.toLowerCase();\n\n      switch (selectedFilter) {\n        case 'active':\n          return todo.completed === false && smallDesc.includes(smallInput);\n\n        case 'completed':\n          return todo.completed === true && smallDesc.includes(smallInput);\n\n        default:\n          return smallDesc.includes(smallInput);\n      }\n    });\n\n    setTodos(filteredTodos);\n  }, [selectedFilter, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedFilter={selectedFilter}\n                setSelectedFilter={(select: string) => setSelectedFilter(select)}\n                query={query}\n                setQuery={(searchText: string) => setQuery(searchText)}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!loading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={todos}\n                  selectedTodoId={todoId}\n                  setTodoId={(id: number) => setTodoId(id)}\n                  setUserId={(id: number) => setUserId(id)}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoId > 0 && (\n        <TodoModal\n          userId={userId}\n          setUserId={(id: number) => setUserId(id)}\n          todos={todos}\n          selectedTodoId={todoId}\n          selectTodo={(id: number) => setTodoId(id)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}